# Used to set up the prometheus server
# Resource: https://prometheus.io/docs/prometheus/latest/getting_started/
global:
  scrape_interval: 10s # By default, scrape targets every 15 seconds.
  evaluation_interval: 10s # Evaluate rules every 15 seconds. The default is every 1 minute.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'udapeople-monitor'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - localhost:9093 #localhost because the our prometheus instance is actually the same of our alertmanager instance

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - /etc/prometheus/rules.yml #the file where we setup the alerts (so we can find a list of alters in the console "alerts")

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

#this is the way if you are testing (using specific host)
#  - job_name: 'node_exporter'
#    scrape_interval: 5s
#    static_configs:
#      - targets: ['ec2-54-160-97-116.compute-1.amazonaws.com:9100']

#but is better the automatic discovery configuration:
  - job_name: 'node_exporter'
    ec2_sd_configs:
      - region: us-east-1
        access_key: #my access key
        secret_key: #my secret key
        port: 9100
    relabel_configs:
        # Only monitor instances with a Name starting with "backend"
      - source_labels: [__meta_ec2_tag_Name]
        regex: backend.*
        action: keep

